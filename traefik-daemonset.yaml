---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:1.7
        name: traefik-ingress-lb
        volumeMounts:
          - name: config 
            mountPath: /config
          #- name: certificates
          #  mountPath: /etc/traefik
        #ports:
        #  - name: http
        #    containerPort: 80
        #    hostPort: 30080 
        #  - name: https
        #    containerPort: 443
        #    hostPort: 30443
        #  - name: admin
        #    containerPort: 8080
        #    hostPort: 30081
        #securityContext:
        #  capabilities:
        #    drop:
        #    - ALL
        #    add:
        #    - NET_BIND_SERVICE
        args:
        - --api
        - --kubernetes
        - --logLevel=INFO
        - -c
        - /config/traefik.toml
        #livenessProbe:
        #  httpGet:
        #    path: /ping
        #    port: 80
        #  initialDelaySeconds: 3
        #  periodSeconds: 3
        #  timeoutSeconds: 1
      volumes:
      - name: config
        configMap:
          name: traefik-conf-external
      #- name: certificates
      #  persistentVolumeClaim:
      #    claimName: traefik-certificates
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  externalTrafficPolicy: Local
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      #port: 12080
      nodePort: 32080
      #targetPort: 80
      port: 80
      name: web
    - protocol: TCP
      #port: 12443 
      nodePort: 32443 
      port: 443
      #targetPort: 443
      name: webs
    - protocol: TCP
      #port: 12081
      nodePort: 32081
      #targetPort: 8080
      port: 8080
      name: admin
  type: NodePort
  #type: LoadBalancer
